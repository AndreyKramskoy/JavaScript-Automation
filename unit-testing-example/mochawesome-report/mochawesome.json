{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 3,
    "pending": 0,
    "failures": 3,
    "start": "2023-01-09T13:59:34.873Z",
    "end": "2023-01-09T13:59:34.888Z",
    "duration": 15,
    "testsRegistered": 6,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "63ca12f8-3696-40e1-b36c-f57531f15ca4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd1c9fd0-47da-416d-b5e9-91ac45a96b11",
          "title": "getEvenNumbersFromArray",
          "fullFile": "C:\\Users\\Andrei_Kramski\\source\\repos\\unit-testing-example\\test\\numbers-validator\\getEvenNumbersFromArray.spec.js",
          "file": "\\test\\numbers-validator\\getEvenNumbersFromArray.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"before each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "8bf6b609-8129-43ee-ae10-e89b7dcd4d9e",
              "parentUUID": "cd1c9fd0-47da-416d-b5e9-91ac45a96b11",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return an array of even numbers when provided with proper data",
              "fullTitle": "getEvenNumbersFromArray should return an array of even numbers when provided with proper data",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfRandomNumbers = [2, 7, 12, 17, 1, 55, 32, 10];\nexpect(validator.getEvenNumbersFromArray(arrayOfRandomNumbers))\n    .to.be.eql([2, 12, 32, 10]);",
              "err": {},
              "uuid": "b4b87ba1-e08f-4e1a-b5eb-49776c79e9f1",
              "parentUUID": "cd1c9fd0-47da-416d-b5e9-91ac45a96b11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if array is not full of numbers",
              "fullTitle": "getEvenNumbersFromArray should throw an error if array is not full of numbers",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const arrayOfValues = [5, '2', 11, 222];\nexpect(() => {\n  validator.getEvenNumbersFromArray(arrayOfValues);\n}).to.throw('[5, 2, 11, 222] is not an array of \"Numbers\"');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including '[5, 2, 11, 222] is not an array of \"N…' but got '[5,2,11,222] is not an array of \"Numb…'",
                "estack": "AssertionError: expected [Function] to throw error including '[5, 2, 11, 222] is not an array of \"N…' but got '[5,2,11,222] is not an array of \"Numb…'\n    at Context.<anonymous> (test\\numbers-validator\\getEvenNumbersFromArray.spec.js:24:16)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": "- [5,2,11,222] is not an array of \"Numbers\"\n+ [5, 2, 11, 222] is not an array of \"Numbers\"\n"
              },
              "uuid": "53052d65-358e-41ff-9770-4d222b28f6a7",
              "parentUUID": "cd1c9fd0-47da-416d-b5e9-91ac45a96b11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "throw an error if is not an array",
              "fullTitle": "getEvenNumbersFromArray throw an error if is not an array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfValues = ['string'];\nexpect(() => {\n  validator.getEvenNumbersFromArray(arrayOfValues);\n}).to.throw('[string] is not an array');",
              "err": {},
              "uuid": "a601a6cf-933e-4109-878c-e4339ff35c7c",
              "parentUUID": "cd1c9fd0-47da-416d-b5e9-91ac45a96b11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4b87ba1-e08f-4e1a-b5eb-49776c79e9f1",
            "a601a6cf-933e-4109-878c-e4339ff35c7c"
          ],
          "failures": [
            "53052d65-358e-41ff-9770-4d222b28f6a7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b20472b2-77a3-4687-8060-113017373002",
          "title": "isNumberEven",
          "fullFile": "C:\\Users\\Andrei_Kramski\\source\\repos\\unit-testing-example\\test\\numbers-validator\\isNumberEven.spec.js",
          "file": "\\test\\numbers-validator\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven\"",
              "fullTitle": "isNumberEven \"before each\" hook in \"isNumberEven\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "725e4432-7dc2-4dec-985a-95f26e49707d",
              "parentUUID": "b20472b2-77a3-4687-8060-113017373002",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven\"",
              "fullTitle": "isNumberEven \"after each\" hook in \"isNumberEven\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "2d2dc00c-4918-43fc-b95e-52a3831edd76",
              "parentUUID": "b20472b2-77a3-4687-8060-113017373002",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return true if number is even",
              "fullTitle": "isNumberEven should return true if number is even",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isNumberEven(4)).to.be.equal(true);",
              "err": {},
              "uuid": "85c25bb9-2c1a-43b6-a8d5-94cb74d7ee66",
              "parentUUID": "b20472b2-77a3-4687-8060-113017373002",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a string",
              "fullTitle": "isNumberEven should throw an error when provided a string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(()=>{\n  validator.isNumberEven('nod');\n}).to.throw('[nod] is not of type \"Number\" it is of type \"string\"');",
              "err": {
                "message": "AssertionError: expected [Function] to throw error including '[nod] is not of type \"Number\" it is o…' but got '[nod] \\n      is not of type \"Number\"…'",
                "estack": "AssertionError: expected [Function] to throw error including '[nod] is not of type \"Number\" it is o…' but got '[nod] \\n      is not of type \"Number\"…'\n    at Context.<anonymous> (test\\numbers-validator\\isNumberEven.spec.js:24:16)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": "- [nod] \n-       is not of type \"Number\" it is of type \"string\"\n+ [nod] is not of type \"Number\" it is of type \"string\"\n"
              },
              "uuid": "b8cc833d-5b6e-4d65-b68f-67d1d12ad210",
              "parentUUID": "b20472b2-77a3-4687-8060-113017373002",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error if is not a number",
              "fullTitle": "isNumberEven should return error if is not a number",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(validator.isNumberEven('4')).to.be.equal(true);",
              "err": {
                "message": "Error: [4] \n      is not of type \"Number\" it is of type \"string\"",
                "estack": "Error: [4] \n      is not of type \"Number\" it is of type \"string\"\n    at NumbersValidator.isNumberEven (app\\numbers-validator.js:10:13)\n    at Context.<anonymous> (test\\numbers-validator\\isNumberEven.spec.js:28:22)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "7cc4681d-6dde-4cd3-ae1e-fe6774f64f04",
              "parentUUID": "b20472b2-77a3-4687-8060-113017373002",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85c25bb9-2c1a-43b6-a8d5-94cb74d7ee66"
          ],
          "failures": [
            "b8cc833d-5b6e-4d65-b68f-67d1d12ad210",
            "7cc4681d-6dde-4cd3-ae1e-fe6774f64f04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}